							      *assistant.nvim*

A modern plugin developed for competitive programmer to automate some common
repeatitive tasks, so that they can focus on their core logic

============================================================================

					      *assistant.nvim-getting-started*

|assistant.nvim| is modern neovim plugin designed for competitive programmer
to automate repeatitive tasks, so that they can focus on more important
aspects


						     *assistant.nvim-features*

- Automatic samples fetching
- Interactice user interface
- Highly customizable
- Blazingly fast
- Builtin parallel task scheduler

						 *assistant.nvim-requirements*

- Neovim version >= 9.5
- Competitive programming companion browser

============================================================================

						     *assistant.nvim-defaults*
>lua
  {
    commands = {
      python = {
        extension = "py",
        compile = nil,
        execute = {
          main = "python3",
          args = { "$FILENAME_WITH_EXTENSION" },
        },
      },
      cpp = {
        extension = "cpp",
        compile = {
          main = "g++",
          args = { "$FILENAME_WITH_EXTENSION", "-o", "$FILENAME_WITHOUT_EXTENSION" },
        },
        execute = {
          main = "./$FILENAME_WITHOUT_EXTENSION",
          args = nil,
        },
      },
    },
    ui = {
      icons = {
        success = "",
        failure = "",
        unknown = "",
        loading = { "󰸴", "󰸵", "󰸸", "󰸷", "󰸶" },
      },
    },
    core = {
      process_budget = 5000,
    },
  }
<

By default plugin comes with pre-written C++ and python commands in the
configurations, but can be customize further

============================================================================

						*assistant.nvim-customization*

Let's add a command for running rust files, so for compiling and running rust
files a shell command can be written as follows:

>sh
  rustc {filename.rs} -o {filename} && ./filename
<

Now above shell command can be convert into lua tables as follows:

>lua
  {
    rust = {
      extension = "rs",
      compile = {
        main = "rustc",
        args = { "$FILENAME_WITH_EXTENSION", "-o", "$FILENAME_WITHOUT_EXTENSION" },
      },
      execute = {
        main = "./$FILENAME_WITHOUT_EXTENSION",
        args = nil,
      },
    },
  }
<

============================================================================

					     *assistant.nvim-ui-customization*

For now only icons can be changed, as follows

>lua
  ui = {
    icons = {
      success = "AC",
      failure = "WA",
      unknown = "UK",
      loading = { "\\", "|", "/", "-" },
    },
  },
<

============================================================================

					   *assistant.nvim-core-customization*

For now only maximum running time of process can be changed
>lua
>lua
  core = {
    process_budget = 6000,
  }
<

vim:tw=78:ts=8:noet:ft=help:norl:
